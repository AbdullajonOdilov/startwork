# Generated by Django 5.0.4 on 2024-04-27 11:15

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images')),
            ],
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_name', models.CharField(max_length=200)),
                ('desc', models.TextField()),
                ('contacts', models.CharField(max_length=300)),
                ('major', models.CharField(max_length=200, verbose_name='category name')),
                ('address', models.CharField(blank=True, max_length=400, null=True)),
                ('organisation', models.CharField(blank=True, max_length=400, null=True)),
                ('date', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Telegram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apiToken', models.CharField(max_length=255, verbose_name='Api Token')),
                ('chatID', models.CharField(max_length=255, verbose_name='Chat Id')),
                ('Date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
            ],
            options={
                'verbose_name': 'Telegram',
                'verbose_name_plural': 'Telegram',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(max_length=200)),
                ('position', models.CharField(max_length=200)),
                ('skills', models.TextField()),
                ('image', models.FileField(blank=True, null=True, upload_to='profile')),
                ('projects_number', models.IntegerField(blank=True, null=True)),
                ('balance', models.FloatField(default=0)),
                ('address', models.CharField(blank=True, max_length=300, null=True)),
                ('status', models.CharField(choices=[('BUSY', 'BUSY'), ('FREE', 'FREE')], max_length=10)),
                ('contacts', models.TextField(blank=True, null=True)),
                ('education', models.CharField(blank=True, max_length=400, null=True)),
                ('accepted', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('contacts', models.CharField(max_length=900)),
                ('desc', models.TextField(blank=True, null=True)),
                ('desc_to_workers', models.TextField(blank=True, null=True)),
                ('price', models.FloatField(verbose_name="Project's price")),
                ('status', models.CharField(choices=[('STARTED', 'STARTED'), ('INPROGRESS', 'INPROGRESS'), ('DONE', 'DONE'), ('REJECTED', 'REJECTED')], max_length=15)),
                ('paid_money', models.FloatField(default=0)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('images', models.ManyToManyField(to='startteam.images')),
                ('workers_id', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summa', models.FloatField()),
                ('paid_money', models.FloatField()),
                ('status', models.BooleanField(default=True)),
                ('telegram_group', models.CharField(blank=True, max_length=400, null=True)),
                ('date', models.DateField(auto_now=True)),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='startteam.projects')),
                ('team_lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leading_teams', to=settings.AUTH_USER_MODEL)),
                ('workers_id', models.ManyToManyField(related_name='teams', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
